name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  MIX_ENV: test

jobs:
  mix_test:
    name: mix test (Erlang/OTP ${{matrix.otp}} | Elixir ${{matrix.elixir}})
    runs-on: ubuntu-latest
    container: hexpm/elixir:${{ matrix.elixir }}-erlang-${{ matrix.otp }}-alpine-3.11.6
    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: 1.7.4
            otp: 20.3.8.19
          - elixir: 1.8.2
            otp: 20.3.8.19
          - elixir: 1.9.4
            otp: 20.3.8.19
          - elixir: 1.9.4
            otp: 21.3.8.16
          - elixir: 1.10.3
            otp: 21.3.8.16
          - elixir: 1.11.2
            otp: 22.3.4.3
          - elixir: 1.11.2
            otp: 23.0.2
    steps:
      - name: Install GNU tar (required for actions/cache@v2)
        run: apk add --no-cache tar

      - uses: actions/checkout@v2

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            _build/
            deps/
          key: v1-mix_test-alpine-elixir-${{ matrix.elixir }}-otp-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: v1-mix_test-alpine-elixir-${{ matrix.elixir }}-otp-${{ matrix.otp }}-

      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - run: mix compile --warnings-as-errors
      - run: mix test

  coverage:
    name: Collect Test Coverage
    runs-on: ubuntu-latest
    container: hexpm/elixir:1.11.2-erlang-22.3.4.3-alpine-3.11.6
    steps:
      # mix coveralls.github requires git to be available
      - name: Install git (required for mix coveralls.github) and GNU tar (required for actions/cache@v2)
        run: apk add --no-cache git tar

      # mix coveralls.github uses git to fetch the pr head so we ensure the whole history is available
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            _build/
            deps/
          key: v1-coverage-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: v1-coverage-mix-

      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - run: mix compile --warnings-as-errors
      - run: mix coveralls.github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check_style:
    name: Check Style
    runs-on: ubuntu-latest
    container: hexpm/elixir:1.11.2-erlang-22.3.4.3-alpine-3.11.6
    steps:
      - name: Install GNU tar (required for actions/cache@v2)
        run: apk add --no-cache tar

      - uses: actions/checkout@v2

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            _build/
            deps/
          key: v1-check_style-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: v1-check_style-mix-

      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Cache - _build/
        uses: actions/cache@v2
        with:
          # Some erlang dependencies put build artifacts into `deps/` so we cache that too
          path: |
            _build/
            deps/
          key: alpine-elixir-1.11.2-otp-22.3.4.3-build-${{ hashFiles('**/mix.lock') }}
          restore-keys: alpine-elixir-1.11.2-otp-22.3.4.3-build-

      - run: mix compile --warnings-as-errors
      - run: mix format --check-formatted
      - run: mix credo
