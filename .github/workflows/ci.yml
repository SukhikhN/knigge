name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  mix_test:
    name: mix test (Erlang/OTP ${{matrix.otp}} | Elixir ${{matrix.elixir}})
    runs-on: ubuntu-latest
    container:
      image: hexpm/elixir:${{ matrix.elixir }}-erlang-${{ matrix.otp }}-alpine-3.11.6
      env:
        MIX_ENV: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: 1.7.4
            otp: 20.3.8.19
          - elixir: 1.8.2
            otp: 20.3.8.19
          - elixir: 1.9.4
            otp: 20.3.8.19
          - elixir: 1.9.4
            otp: 21.3.8.16
          - elixir: 1.10.3
            otp: 21.3.8.16
          - elixir: 1.11.2
            otp: 22.3.4.3
          - elixir: 1.11.2
            otp: 23.0.2
    steps:
      - uses: actions/checkout@v2

      - name: Cache - deps/
        uses: actions/cache@v1
        with:
          path: deps/
          key: v1-mix_test-deps-alpine-elixir-${{ matrix.elixir }}-otp-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: v1-mix_test-deps-alpine-elixir-${{ matrix.elixir }}-otp-${{ matrix.otp }}-

      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --only "$MIX_ENV"

      - name: Cache - _build/
        uses: actions/cache@v1
        with:
          path: _build/
          key: v1-mix_test-_build-alpine-elixir-${{ matrix.elixir }}-otp-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: v1-mix_test-_build-alpine-elixir-${{ matrix.elixir }}-otp-${{ matrix.otp }}-

      - run: mix compile --warnings-as-errors
      - run: mix test

  coverage:
    name: Collect Test Coverage
    runs-on: ubuntu-latest
    container:
      image: hexpm/elixir:1.11.2-erlang-22.3.4.3-alpine-3.11.6
      env:
        MIX_ENV: test
    steps:
      - name: Install git (required for mix coveralls.github)
        run: apk add --no-cache git

      # mix coveralls.github uses git to fetch the pr head so we ensure the whole history is available
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache - deps/
        uses: actions/cache@v1
        with:
          path: deps/
          key: v1-coverage-deps-${{ hashFiles('**/mix.lock') }}
          restore-keys: v1-coverage-deps-

      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --only "$MIX_ENV"

      - name: Cache - _build/
        uses: actions/cache@v1
        with:
          path: _build/
          key: v1-coverage-_build-${{ hashFiles('**/mix.lock') }}
          restore-keys: v1-coverage-_build-

      - run: mix compile --warnings-as-errors
      - run: mix coveralls.github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check_style:
    name: Check Style
    runs-on: ubuntu-latest
    container:
      image: hexpm/elixir:1.11.2-erlang-22.3.4.3-alpine-3.11.6
      env:
        MIX_ENV: dev
    steps:
      - uses: actions/checkout@v2

      - name: Cache - deps/
        uses: actions/cache@v1
        with:
          path: deps/
          key: v1-check_style-deps-${{ hashFiles('**/mix.lock') }}
          restore-keys: v1-check_style-deps-

      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --only "$MIX_ENV"

      - name: Cache - _build/
        uses: actions/cache@v1
        with:
          path: _build/
          key: v1-check_style-_build-${{ hashFiles('**/mix.lock') }}
          restore-keys: v1-check_style-_build-

      - run: mix compile --warnings-as-errors
      - run: mix format --check-formatted
      - run: mix credo

  check_types:
    name: Check Types
    runs-on: ubuntu-latest
    container:
      image: hexpm/elixir:1.11.2-erlang-22.3.4.3-alpine-3.11.6
      env:
        MIX_ENV: dev
    steps:
      - uses: actions/checkout@v2

      - name: Cache - deps/
        uses: actions/cache@v1
        with:
          path: deps/
          key: v1-check_style-deps-${{ hashFiles('**/mix.lock') }}
          restore-keys: v1-check_style-deps-

      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --only "$MIX_ENV"

      - name: Cache - _build/
        uses: actions/cache@v1
        with:
          path: _build/
          key: v1-check_style-_build-${{ hashFiles('**/mix.lock') }}
          restore-keys: v1-check_style-_build-

      - run: mix compile --warnings-as-errors

      - name: Cache - Dialyzer PLTs
        uses: actions/cache@v1
        with:
          path: .dialyzer/
          key: v1-check_types-dialyzer-plts

      - run: mix dialyzer
