name: Release

on:
  release:
    types: [published]

env:
  MIX_ENV: dev
  REQUIRE_VERSION_FILE: true
  CACHE_VERSION_DEPS: v1
  CACHE_VERSION_BUILD: v1

jobs:
  publish_to_hex:
    name: Publish to Hex.pm (Erlang/OTP ${{matrix.otp}} | Elixir ${{matrix.elixir}} | Alpine ${{matrix.alpine}})
    runs-on: ubuntu-latest
    container: hexpm/elixir:${{ matrix.elixir }}-erlang-${{ matrix.otp }}-alpine-${{ matrix.alpine }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - alpine: 3.11.6
            elixir: 1.11.2
            otp: 22.3.4.3
    steps:
      - uses: actions/checkout@v2

      - name: Write the release version to the version file
        run: |
          echo "Create version file for $GITHUB_REF"
          echo -n "${GITHUB_REF#refs/tags/v}" > version

      - name: Cache - deps/
        uses: actions/cache@v1
        with:
          path: deps/
          key: ${{ env.CACHE_VERSION_DEPS }}-deps-env:${{ env.MIX_ENV}}-alpine:${{ matrix.alpine }}-elixir:${{ matrix.elixir }}-otp:${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ env.CACHE_VERSION_DEPS }}-deps-env:${{ env.MIX_ENV}}-alpine:${{ matrix.alpine }}-elixir:${{ matrix.elixir }}-otp:${{ matrix.otp }}-

      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --only "$MIX_ENV"

      - name: Cache - _build/
        uses: actions/cache@v1
        with:
          path: _build/
          key: ${ env.CACHE_VERSION_BUILD }}-_build-env:${{ env.MIX_ENV}}-alpine:${{ matrix.alpine }}-elixir:${{ matrix.elixir }}-otp:${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${ env.CACHE_VERSION_BUILD }}-_build-env:${{ env.MIX_ENV}}-alpine:${{ matrix.alpine }}-elixir:${{ matrix.elixir }}-otp:${{ matrix.otp }}-

      - run: mix compile --warnings-as-errors

      - name: Publish to Hex.pm
        run: mix hex.publish --yes
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}
